<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.laile.volcano.core.dao.auth.role.RoleDAO">
    
    <resultMap id="BaseResultMap" type="com.laile.volcano.core.model.auth.role.Role">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    </resultMap>
    
    <sql id="Param_Base_Clause">
        <if test="map != null">
            <foreach collection=" map.list " item="criteria">
                 ${criteria.condition} 
                <if test=" criteria.haveValue ">
                     #{criteria.value} 
                </if>
            </foreach>
        </if>
    </sql>
    
    <sql id="Base_Column_List">
        id, role_code, role_name, status, remark, update_by, update_time, create_time, create_by
    </sql>
    
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from t_role
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="queryAdminRoleCodes" parameterType="java.lang.Integer" resultType="java.util.Set">
        select
          role_code
        from t_role r,t_admin_role ar
        where r.id = ar.role_id and ar.admin_id = #{id,jdbcType=INTEGER}
    </select>
    
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_role
    </select>
    
    <select id="selectPagination" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_role
        <include refid="Param_Base_Clause" />
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_role
        where id = #{id,jdbcType=INTEGER}
    </delete>
    
    <insert id="insert" parameterType="com.laile.volcano.core.model.auth.role.Role" useGeneratedKeys="true" keyProperty="id">
        insert into t_role (id, role_code, role_name, 
            status, remark, update_by, 
            update_time, create_time, create_by
            )
        values (#{id,jdbcType=INTEGER}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
            #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{updateBy,jdbcType=VARCHAR}, 
            #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}
            )
    </insert>
    
    <insert id="insertSelective" parameterType="com.laile.volcano.core.model.auth.role.Role">
        insert into t_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleCode != null">
                role_code,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleCode != null">
                #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.laile.volcano.core.model.auth.role.Role">
        update t_role
        <set>
            <if test="roleCode != null">
                role_code = #{roleCode,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <update id="updateByPrimaryKey" parameterType="com.laile.volcano.core.model.auth.role.Role">
        update t_role
        set role_code = #{roleCode,jdbcType=VARCHAR},
            role_name = #{roleName,jdbcType=VARCHAR},
            status = #{status,jdbcType=INTEGER},
            remark = #{remark,jdbcType=VARCHAR},
            update_by = #{updateBy,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            create_by = #{createBy,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <select id="selectByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_role
        <include refid="Param_Base_Clause" />
    </select>
    
    <insert id="insertBatch" parameterType="java.util.List">
        insert into t_role (id, role_code, role_name, 
            status, remark, update_by, 
            update_time, create_time, 
            create_by)
         values 
        <foreach  collection="list" index="index" item="item" separator=",">
             (#{item.id,jdbcType=INTEGER}, #{item.roleCode,jdbcType=VARCHAR}, #{item.roleName,jdbcType=VARCHAR}, 
                #{item.status,jdbcType=INTEGER}, #{item.remark,jdbcType=VARCHAR}, #{item.updateBy,jdbcType=VARCHAR}, 
                #{item.updateTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, 
                #{item.createBy,jdbcType=VARCHAR}
            )
        </foreach >
    </insert>
    
    <update id="updateByParam">
        update t_role
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.roleCode != null">
                role_code = #{record.roleCode,jdbcType=VARCHAR},
            </if>
            <if test="record.roleName != null">
                role_name = #{record.roleName,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.updateBy != null">
                update_by = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=VARCHAR},
            </if>
        </set>
        <include refid="Param_Base_Clause" />
    </update>
    
    <delete id="deleteByParam">
        delete from t_role
        <include refid="Param_Base_Clause" />
    </delete>
    
    <update id="truncate">
        truncate t_role
    </update>
    
    <select id="countAll" resultType="java.lang.Long">
        select count(*) from t_role
    </select>
    
    <select id="countByParam" resultType="java.lang.Long">
        select count(*) from t_role
        <include refid="Param_Base_Clause" />
    </select>
    
    <select id="selectOne" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_role
        <where>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER}
            </if>
            <if test="record.roleCode != null">
                 and role_code = #{record.roleCode,jdbcType=VARCHAR}
            </if>
            <if test="record.roleName != null">
                 and role_name = #{record.roleName,jdbcType=VARCHAR}
            </if>
            <if test="record.status != null">
                 and status = #{record.status,jdbcType=INTEGER}
            </if>
            <if test="record.remark != null">
                 and remark = #{record.remark,jdbcType=VARCHAR}
            </if>
            <if test="record.updateBy != null">
                 and update_by = #{record.updateBy,jdbcType=VARCHAR}
            </if>
            <if test="record.updateTime != null">
                 and update_time = #{record.updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.createTime != null">
                 and create_time = #{record.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.createBy != null">
                 and create_by = #{record.createBy,jdbcType=VARCHAR}
            </if>
        </where>
         limit 1
    </select>
    
    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_role
        <where>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER}
            </if>
            <if test="record.roleCode != null">
                 and role_code = #{record.roleCode,jdbcType=VARCHAR}
            </if>
            <if test="record.roleName != null">
                 and role_name = #{record.roleName,jdbcType=VARCHAR}
            </if>
            <if test="record.status != null">
                 and status = #{record.status,jdbcType=INTEGER}
            </if>
            <if test="record.remark != null">
                 and remark = #{record.remark,jdbcType=VARCHAR}
            </if>
            <if test="record.updateBy != null">
                 and update_by = #{record.updateBy,jdbcType=VARCHAR}
            </if>
            <if test="record.updateTime != null">
                 and update_time = #{record.updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.createTime != null">
                 and create_time = #{record.createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="record.createBy != null">
                 and create_by = #{record.createBy,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
</mapper>